generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Customer =======================================

model Customer {
  uid            String  @id
  email          String  @unique
  password       String
  first_name     String
  last_name      String
  contact_no     String? @unique
  address_line_1 String?
  address_line_2 String?
  city           String?
  district       String?
  // Appointment    Appointment[]
}

model Unregistered_Customer {
  contact_no     String  @id
  email          String  @unique
  first_name     String
  last_name      String
  address_line_1 String?
  address_line_2 String?
  city           String?
  district       String?
}

// Employee =======================================

model Employee {
  uid            String   @id
  email          String   @unique
  password       String
  first_name     String
  last_name      String
  contact_no     String?  @unique
  address_line_1 String?
  address_line_2 String?
  city           String?
  district       String?
  role           role
  gender         String?
  doj            String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  // Appointment    Appointment[]
}

enum role {
  ADMIN
  OWNER
  MANAGER
  BEAUTICIAN
  RECEPTIONIST
}

// Service =======================================

model Service {
  id          String   @id
  name        String
  category    String
  description String?  @db.Text
  price       Float
  duration    String
  status      String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  // Appointments Appointment[]
}

// Appointment =======================================

model Appointment {
  id            String  @id
  date          String
  status        String
  services      String
  beautician    String
  beautician_id String
  customer      String
  customer_id   String
  totalPrice    Float
  startTime     String?
  duration      String?
  // customer    Customer  @relation(fields: [customer_id], references: [uid])
  // customer_id String
  // employee    Employee? @relation(fields: [employee_id], references: [uid])
  // employee_id String?
  // services    Service[]
}
